{"version":3,"sources":["services/serverService.js","components/Home.js","components/PatientDetails.js","components/Notification.js","components/Header.js","components/PatientGrid.js","components/App.js","index.js"],"names":["baseUrl","server","getPatients","axios","get","then","response","data","uploadPatientList","formData","post","getPatientInfo","id","Home","fileChangeHandler","patientData","dataRenderHandler","className","shadow","length","appearance","title","type","onChange","PatientDetails","patientDetail","backButtonHandler","name","age","gender","contact","address","onClick","Notification","message","Header","AppBar","position","Toolbar","Typography","variant","PatientTable","fetchPatientDetail","schema","displayName","width","resizable","separator","tooltip","translate","a","cellType","sorting","comparator","b","localeCompare","statusAppearance","filters","label","value","onFilterChange","filter","toLowerCase","align","style","height","loaderSchema","withHeader","headerOptions","withSearch","onSearch","currData","searchTerm","d","match","withCheckbox","onSelect","rowIndex","selected","selectedList","selectAll","console","log","JSON","stringify","withPagination","pageSize","onPageChange","newPage","App","useState","setPatientData","showDetails","setShowDetails","patientDetails","setPatientDetails","setMessage","messageType","setMessageType","displayNotification","setTimeout","catch","error","useEffect","serverData","event","target","files","fileName","includes","FormData","append","csvData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8b91a181.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = \"/patients\";\n\nconst getPatients = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst uploadPatientList = (formData) => {\n  const request = axios.post(baseUrl, formData);\n  return request.then((response) => response.data);\n};\n\nconst getPatientInfo = (id) => {\n  const request = axios.get(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nconst server = { getPatients, uploadPatientList, getPatientInfo };\n\nexport default server;\n","/* eslint-disable react/prop-types */\nimport React from \"react\";\nimport { Card, Message } from \"@innovaccer/design-system\";\n\nconst Home = ({ fileChangeHandler, patientData, dataRenderHandler }) => {\n  return (\n    <div>\n      <div className=\"homeContainer\">\n        <h2>Patient Details</h2>\n        <Card shadow=\"dark\">\n          {patientData.length > 0 ? (\n            dataRenderHandler(patientData)\n          ) : (\n            <Message\n              appearance=\"alert\"\n              title=\"Data not found\"\n            >\n              Please upload a CSV/XLS file.\n            </Message>\n          )}\n        </Card>\n        <h2>Upload Patient List</h2>\n        <Card shadow=\"dark\" className=\"w-100 h-100\">\n          <input type=\"file\" onChange={fileChangeHandler} />\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","/* eslint-disable react/prop-types */\nimport { Button, Card } from \"@innovaccer/design-system\";\nimport React from \"react\";\n\nconst PatientDetails = ({ patientDetail, backButtonHandler }) => {\n  return (\n    <div>\n      <div className=\"homeContainer\">\n        <Card className=\"h-100\">\n          <table>\n            <tbody>\n              <tr>\n                <td className=\"imp\">Name</td>\n                <td>{patientDetail?.name ?? \"--\"}</td>\n              </tr>\n              <tr>\n                <td className=\"imp\">Age</td>\n                <td>{patientDetail?.age ?? \"--\"}</td>\n              </tr>\n              <tr>\n                <td className=\"imp\">Gender</td>\n                <td>{patientDetail?.gender ?? \"--\"}</td>\n              </tr>\n              <tr>\n                <td className=\"imp\">Contact</td>\n                <td>{patientDetail?.contact ?? \"--\"}</td>\n              </tr>\n              <tr>\n                <td className=\"imp\">Address</td>\n                <td>{patientDetail?.address ?? \"--\"}</td>\n              </tr>\n            </tbody>\n          </table>\n          <Button appearance=\"primary\" onClick={backButtonHandler}>\n            Go Back\n          </Button>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default PatientDetails;\n","/* eslint-disable react/prop-types */\nimport { Toast } from \"@innovaccer/design-system\";\nimport React from \"react\";\n\nconst Notification = ({ message, type }) => {\n  if (message === null) return null;\n  return (\n    <div className=\"mr-5 mb-8\">\n      <Toast appearance={type} title={message} />\n    </div>\n  );\n};\n\nexport default Notification;\n","/* eslint-disable react/prop-types */\nimport React from \"react\";\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\n\nconst Header = ({ title }) => {\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h5\">{title}</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/display-name */\nimport React from \"react\";\nimport { Card, Table } from \"@innovaccer/design-system\";\n\nconst PatientTable = ({ data, fetchPatientDetail }) => {\n  /* const data = [\n    {\n      firstName: \"Brooke\",\n      lastName: \"Heeran\",\n      email: \"bheeran0@altervista.org\",\n      gender: \"Female\",\n    },\n    {\n      firstName: \"Frazer\",\n      lastName: \"Cathro\",\n      email: \"fcathro1@ucla.edu\",\n      gender: \"Male\",\n    },\n    {\n      firstName: \"Lemmie\",\n      lastName: \"Ciric\",\n      email: {\n        title: \"lciric2@dmoz.org\",\n        metaList: [\"First\", \"Second\"],\n      },\n      gender: \"Male\",\n    },\n    {\n      firstName: \"Randy\",\n      lastName: \"Boatwright\",\n      email: \"rboatwright3@arstechnica.com\",\n      gender: \"Male\",\n    },\n    {\n      firstName: \"Rolando\",\n      lastName: \"Cyples\",\n      email: \"rcyples4@biglobe.ne.jp\",\n      gender: \"Male\",\n    },\n    {\n      firstName: \"Lem\",\n      lastName: \"Males\",\n      email: \"lmales5@admin.ch\",\n      gender: \"Male\",\n    },\n    {\n      firstName: \"Sayres\",\n      lastName: \"Adelberg\",\n      email: \"sadelberg6@uol.com.br\",\n      gender: \"Male\",\n    },\n    {\n      firstName: \"Murray\",\n      lastName: \"Bravington\",\n      email: \"mbravington7@drupal.org\",\n      gender: \"Male\",\n    },\n    {\n      firstName: \"Jena\",\n      lastName: \"Swatheridge\",\n      email: \"jswatheridge8@npr.org\",\n      gender: \"Female\",\n    },\n    {\n      firstName: \"Annabel\",\n      lastName: \"Nelsey\",\n      email: \"anelsey9@google.com\",\n      gender: \"Female\",\n    },\n  ]; */\n\n  const schema = [\n    {\n      name: \"name\",\n      displayName: \"Name\",\n      width: \"40%\",\n      resizable: true,\n      separator: true,\n      tooltip: true,\n      translate: (a) => ({\n        title: `${a.name}`,\n        name: a.name,\n      }),\n      cellType: \"AVATAR_WITH_TEXT\",\n    },\n    {\n      name: \"age\",\n      displayName: \"Age\",\n      width: 150,\n      resizable: true,\n      sorting: false,\n      cellType: \"WITH_META_LIST\",\n    },\n    {\n      name: \"gender\",\n      displayName: \"Gender\",\n      width: 150,\n      resizable: true,\n      comparator: (a, b) => a.gender.localeCompare(b.gender),\n      cellType: \"STATUS_HINT\",\n      translate: (a) => ({\n        title: a.gender,\n        statusAppearance: a.gender === \"Female\" ? \"alert\" : \"success\",\n      }),\n      filters: [\n        { label: \"Male\", value: \"male\" },\n        { label: \"Female\", value: \"female\" },\n      ],\n      onFilterChange: (a, filters) => {\n        for (const filter of filters) {\n          if (a.gender.toLowerCase() === filter) return true;\n        }\n        return false;\n      },\n    },\n    {\n      name: \"contact\",\n      displayName: \"Contact\",\n      width: 250,\n      resizable: true,\n      align: \"center\",\n      cellType: \"WITH_META_LIST\",\n    },\n    {\n      name: \"address\",\n      displayName: \"Address\",\n      width: 200,\n      resizable: true,\n      cellType: \"WITH_META_LIST\",\n    },\n  ];\n\n  const loaderSchema = [\n    {\n      name: \"name\",\n      displayName: \"Name\",\n      width: \"40%\",\n      resizable: true,\n      tooltip: true,\n      separator: true,\n      filters: [\n        {\n          label: \"A-G\",\n          value: \"a-g\",\n        },\n        {\n          label: \"H-R\",\n          value: \"h-r\",\n        },\n        {\n          label: \"S-Z\",\n          value: \"s-z\",\n        },\n      ],\n      cellType: \"AVATAR_WITH_TEXT\",\n    },\n    {\n      name: \"age\",\n      displayName: \"Age\",\n      width: 250,\n      resizable: true,\n      sorting: false,\n      cellType: \"WITH_META_LIST\",\n    },\n    {\n      name: \"gender\",\n      displayName: \"Gender\",\n      width: 180,\n      resizable: true,\n      cellType: \"STATUS_HINT\",\n      filters: [\n        {\n          label: \"Male\",\n          value: \"male\",\n        },\n        {\n          label: \"Female\",\n          value: \"female\",\n        },\n      ],\n    },\n    {\n      name: \"contact\",\n      displayName: \"Contact\",\n      width: 100,\n      resizable: true,\n      align: \"center\",\n      cellType: \"ICON\",\n    },\n    {\n      name: \"address\",\n      displayName: \"Address\",\n      width: 200,\n      resizable: true,\n      cellType: \"WITH_META_LIST\",\n    },\n  ];\n\n  return (\n    <div\n      style={{\n        height: \"350px\",\n      }}\n    >\n      <Card className=\"h-100\">\n        <Table\n          loaderSchema={loaderSchema}\n          data={data}\n          schema={schema}\n          withHeader={true}\n          headerOptions={{\n            withSearch: true,\n          }}\n          onSearch={(currData, searchTerm) => {\n            return currData.filter((d) =>\n              d.name.toLowerCase().match(searchTerm.toLowerCase())\n            );\n          }}\n          withCheckbox={true}\n          onSelect={(rowIndex, selected, selectedList, selectAll) => {\n            console.log(\n              `on-select:- rowIndex: ${rowIndex} selected: ${selected} selectedList: ${JSON.stringify(\n                selectedList\n              )} selectAll: ${selectAll}`\n            );\n            if (selectedList.length) fetchPatientDetail(selectedList[0][\"id\"]);\n          }}\n          withPagination={true}\n          pageSize={5}\n          onPageChange={(newPage) => console.log(`on-page-change:- ${newPage}`)}\n        />\n      </Card>\n    </div>\n  );\n};\n\nexport default PatientTable;\n","import React, { useEffect, useState } from \"react\";\nimport server from \"../services/serverService\";\nimport Home from \"./Home\";\nimport PatientDetails from \"./PatientDetails\";\nimport Notification from \"./Notification\";\nimport Header from \"./Header\";\nimport PatientTable from \"./PatientGrid\";\n\nconst App = () => {\n  const [patientData, setPatientData] = useState([]);\n  const [showDetails, setShowDetails] = useState(false);\n  const [patientDetails, setPatientDetails] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [messageType, setMessageType] = useState(null);\n\n  const displayNotification = (message, type) => {\n    setMessage(message);\n    setMessageType(type);\n    setTimeout(() => {\n      setMessage(null);\n      setMessageType(null);\n    }, 1000);\n  };\n\n  const renderData = (data) => {\n    return <PatientTable data={data} fetchPatientDetail={fetchPatientDetail} />;\n  };\n\n  const onChangeHandler = (event) => {\n    console.log(event.target.files[0]);\n\n    //check if the file types are csv/sheets\n    let fileName = event.target.files[0].name;\n    if (\n      !fileName.toLowerCase().includes(\"csv\") &&\n      !fileName.toLowerCase().includes(\"xls\")\n    ) {\n      displayNotification(\"Please select xls or csv files only!\", \"alert\");\n      return;\n    }\n    //setPatientData([]);\n    const formData = new FormData();\n    formData.append(\"Data\", event.target.files[0], fileName);\n    server\n      .uploadPatientList(formData)\n      .then((csvData) => {\n        console.log(csvData);\n        setPatientData(csvData);\n        displayNotification(\"Data Fetched Successfully\", \"success\");\n        //event.target.value = null;\n      })\n      .catch((error) => {\n        console.error(error);\n        displayNotification(\n          `Error : ${error.response.data.error}`,\n          \"alert\"\n        );\n        //event.target.value = null;\n      });\n  };\n\n  const fetchPatientDetail = (id) => {\n    server\n      .getPatientInfo(id)\n      .then((data) => {\n        setPatientDetails(data);\n        setShowDetails(true);\n        displayNotification(\"Patient Details Fetched\", \"success\");\n      })\n      .catch((error) => {\n        console.error(error);\n        displayNotification(\n          \"Error Fetching Details from the server, Try again\",\n          \"alert\"\n        );\n      });\n  };\n\n  useEffect(() => {\n    server.getPatients().then((serverData) => {\n      if (serverData) {\n        setPatientData(serverData);\n        displayNotification(\"Stored data loaded from database\", \"success\");\n      }\n    });\n  }, []);\n\n  return (\n    <div>\n      {showDetails ? (\n        <>\n          <Header title=\"Patient Details\" />\n          <Notification message={message} type={messageType} />\n          <PatientDetails\n            patientDetail={patientDetails}\n            backButtonHandler={() => setShowDetails(false)}\n          />\n        </>\n      ) : (\n        <>\n          <Header title=\"Patient Info Application\" />\n          <Notification message={message} type={messageType} />\n          <Home\n            fileChangeHandler={onChangeHandler}\n            patientData={patientData}\n            dataRenderHandler={renderData}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"@innovaccer/design-system/css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}