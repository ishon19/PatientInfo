{"version":3,"sources":["services/serverService.js","components/Home.js","components/PatientDetails.js","components/Notification.js","components/Header.js","components/App.js","index.js"],"names":["baseUrl","server","getPatients","axios","get","then","response","data","uploadPatientList","formData","post","getPatientInfo","id","Home","fileChangeHandler","patientData","dataRenderHandler","className","shadow","length","type","onChange","PatientDetails","patientDetail","backButtonHandler","name","age","gender","contact","address","appearance","onClick","Notification","message","title","Header","AppBar","position","Toolbar","Typography","variant","App","useState","setPatientData","showDetails","setShowDetails","patientDetails","setPatientDetails","setMessage","messageType","setMessageType","displayNotification","setTimeout","fetchPatientDetail","catch","error","console","event","log","target","files","FormData","append","csvData","options","filter","filterType","responsive","selectablerows","onRowClick","rowData","columns","label","sort","display","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7ee4c8b.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = \"http://localhost:3002/patients\";\n\nconst getPatients = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst uploadPatientList = (formData) => {\n  const request = axios.post(baseUrl, formData);\n  return request.then((response) => response.data);\n};\n\nconst getPatientInfo = (id) => {\n  const request = axios.get(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nconst server = { getPatients, uploadPatientList, getPatientInfo };\n\nexport default server;\n","/* eslint-disable react/prop-types */\nimport React from \"react\";\nimport { Card } from \"@innovaccer/design-system\";\n\nconst Home = ({ fileChangeHandler, patientData, dataRenderHandler }) => {\n  return (\n    <div>\n      <div className=\"homeContainer\">\n        <h2>Patient Details</h2>\n        <Card shadow=\"dark\">\n          {patientData.length > 0 ? (\n            dataRenderHandler(patientData)\n          ) : (\n            <p>Please Upload the CSV/XLS File First</p>\n          )}\n        </Card>\n        <h2>Upload Patient List</h2>\n        <Card shadow=\"dark\" className=\"w-100 h-100\">\n          <input type=\"file\" onChange={fileChangeHandler} />\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","/* eslint-disable react/prop-types */\nimport { Button, Card } from \"@innovaccer/design-system\";\nimport React from \"react\";\n\nconst PatientDetails = ({ patientDetail, backButtonHandler }) => {\n  return (\n    <div>\n      <div className=\"homeContainer\">\n        <Card className=\"h-100\">\n          <table>\n            <tbody>\n              <tr>\n                <td className=\"imp\">Name</td>\n                <td>{patientDetail?.name ?? \"--\"}</td>\n              </tr>\n              <tr>\n                <td className=\"imp\">Age</td>\n                <td>{patientDetail?.age ?? \"--\"}</td>\n              </tr>\n              <tr>\n                <td className=\"imp\">Gender</td>\n                <td>{patientDetail?.gender ?? \"--\"}</td>\n              </tr>\n              <tr>\n                <td className=\"imp\">Contact</td>\n                <td>{patientDetail?.contact ?? \"--\"}</td>\n              </tr>\n              <tr>\n                <td className=\"imp\">Address</td>\n                <td>{patientDetail?.address ?? \"--\"}</td>\n              </tr>\n            </tbody>\n          </table>\n          <Button appearance=\"primary\" onClick={backButtonHandler}>\n            Go Back\n          </Button>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default PatientDetails;\n","/* eslint-disable react/prop-types */\nimport { Toast } from \"@innovaccer/design-system\";\nimport React from \"react\";\n\nconst Notification = ({ message, type }) => {\n  if (message === null) return null;\n  return (\n    <div className=\"mr-5 mb-8\">\n      <Toast appearance={type} title={message} />\n    </div>\n  );\n};\n\nexport default Notification;\n","/* eslint-disable react/prop-types */\nimport React from \"react\";\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\n\nconst Header = ({ title }) => {\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h5\">{title}</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport server from \"../services/serverService\";\nimport MUIDataTable from \"mui-datatables\";\nimport Home from \"./Home\";\nimport PatientDetails from \"./PatientDetails\";\nimport Notification from \"./Notification\";\nimport Header from \"./Header\";\n\nconst App = () => {\n  const [patientData, setPatientData] = useState([]);\n  const [showDetails, setShowDetails] = useState(false);\n  const [patientDetails, setPatientDetails] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [messageType, setMessageType] = useState(null);\n\n  const displayNotification = (message, type) => {\n    setMessage(message);\n    setMessageType(type);\n    setTimeout(() => {\n      setMessage(null);\n      setMessageType(null);\n    }, 1000);\n  };\n\n  const renderData = (data) => {\n    /*return data.map((patient) => (\n      <p key={patient.contact}>\n        {patient.name} {patient.age} {patient.gender} {patient.contact}\n      </p>\n    )); */\n    let columns = [\n      {\n        name: \"name\",\n        label: \"Name\",\n        options: {\n          sort: true,\n        },\n      },\n      {\n        name: \"age\",\n        label: \"Age\",\n        options: {\n          sort: true,\n        },\n      },\n      {\n        name: \"gender\",\n        label: \"Gender\",\n        options: {\n          sort: true,\n        },\n      },\n      {\n        name: \"contact\",\n        label: \"Contact\",\n        options: {\n          sort: true,\n        },\n      },\n      {\n        name: \"id\",\n        label: \"ID\",\n        options: {\n          display: \"excluded\",\n        },\n      },\n    ];\n\n    const options = {\n      filter: false,\n      filterType: \"checkbox\",\n      responsive: \"standard\",\n      selectablerows: true,\n      onRowClick: (rowData) => {\n        console.log(\"Row clicked\", rowData);\n        fetchPatientDetail(rowData[4]);\n      },\n    };\n\n    return (\n      <MUIDataTable\n        title=\"Patient List\"\n        data={data}\n        columns={columns}\n        options={options}\n      />\n    );\n  };\n\n  const onChangeHandler = (event) => {\n    setPatientData([]);\n    console.log(event.target.files[0]);\n    const formData = new FormData();\n    formData.append(\"Data\", event.target.files[0], event.target.files[0].name);\n    server\n      .uploadPatientList(formData)\n      .then((csvData) => {\n        console.log(csvData);\n        setPatientData(csvData);\n        displayNotification(\"Data Fetched Successfully\", \"success\");\n      })\n      .catch((error) => {\n        console.error(error);\n        displayNotification(\n          \"Error Fetching Details from the server, Try again\",\n          \"alert\"\n        );\n      });\n  };\n\n  const fetchPatientDetail = (id) => {\n    server\n      .getPatientInfo(id)\n      .then((data) => {\n        setPatientDetails(data[0]);\n        setShowDetails(true);\n        displayNotification(\"Patient Details Fetched\", \"success\");\n      })\n      .catch((error) => {\n        console.error(error);\n        displayNotification(\n          \"Error Fetching Details from the server, Try again\",\n          \"alert\"\n        );\n      });\n  };\n\n  return (\n    <div>\n      {showDetails ? (\n        <>\n          <Header title=\"Patient Details\" />\n          <Notification message={message} type={messageType} />\n          <PatientDetails\n            patientDetail={patientDetails}\n            backButtonHandler={() => setShowDetails(false)}\n          />\n        </>\n      ) : (\n        <>\n          <Header title=\"Patient Info Application\" />\n          <Notification message={message} type={messageType} />\n          <Home\n            fileChangeHandler={onChangeHandler}\n            patientData={patientData}\n            dataRenderHandler={renderData}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"@innovaccer/design-system/css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}